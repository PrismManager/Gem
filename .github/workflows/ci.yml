name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod download

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.54.2
        golangci-lint --version

    - name: Run golangci-lint
      run: golangci-lint run ./...

  release:
    needs: [build, lint]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: go mod download

    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o gem-linux-amd64
        GOOS=linux GOARCH=arm64 go build -o gem-linux-arm64
        GOOS=darwin GOARCH=amd64 go build -o gem-darwin-amd64
        GOOS=darwin GOARCH=arm64 go build -o gem-darwin-arm64

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          gem-linux-amd64
          gem-linux-arm64
          gem-darwin-amd64
          gem-darwin-arm64
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
